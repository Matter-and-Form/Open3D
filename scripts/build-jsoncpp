#!/bin/bash

SCRIPT_PATH="$( cd -- "$( dirname -- "${BASH_SOURCE[0]:-$0}"; )" &> /dev/null && pwd 2> /dev/null; )";

# Get source, build and install directories and common functions.
source ${SCRIPT_PATH}/common

JSONCPP_NAME=jsoncpp
JSONCPP_URL=https://github.com/open-source-parsers/jsoncpp.git
JSONCPP_BRANCH=1.9.5
JSONCPP_SOURCE_PATH=${COMMON_SOURCE_PATH}/${JSONCPP_NAME}
JSONCPP_BUILD_PATH=${COMMON_BUILD_PATH}/${JSONCPP_NAME}
JSONCPP_INSTALL_PATH=${COMMON_INSTALL_PATH}/${JSONCPP_NAME}
JSONCPP_DEPENDENCIES=""
JSONCPP_FLAGS=(
    -DCMAKE_INSTALL_PREFIX=${JSONCPP_INSTALL_PATH}
    -DCMAKE_BUILD_TYPE=Release
    -DBUILD_SHARED_LIBS=OFF
    -DBUILD_STATIC_LIBS=ON
    -DBUILD_OBJECT_LIBS=OFF
    -DBUILD_TESTING:BOOL=OFF
    -DJSONCPP_WITH_PKGCONFIG_SUPPORT=OFF
    -DJSONCPP_WITH_POST_BUILD_UNITTEST=OFF
    -DJSONCPP_WITH_TESTS=OFF
    -DCMAKE_CXX_FLAGS='-fPIC'
    -DCMAKE_C_FLAGS='-fPIC')

# Skip if the library is already installed
FindLibrary ${JSONCPP_INSTALL_PATH} jsoncpp
if [ $? -ne 0 ]; then
    exit 0
fi

echo ""
echo "*************************************************************"
echo "*                     Build jsoncpp                         *"
echo "*************************************************************"
echo ""

InstallPackages ${COMMON_REQUIRED_PACKAGES} ${JSONCPP_DEPENDENCIES}
GitClone ${JSONCPP_SOURCE_PATH} ${JSONCPP_URL} ${JSONCPP_BRANCH}
BuildAndInstall ${JSONCPP_SOURCE_PATH} ${JSONCPP_BUILD_PATH} ${JSONCPP_FLAGS[@]}
ScrubLibraries ${JSONCPP_INSTALL_PATH}/lib

# The pkgconfig directory contains information about the build machine, and it is not needed.
#rm -rf ${JSONCPP_INSTALL_PATH}/lib/pkgconfig

echo ""
echo "*************************************************************"
echo "*                 Build jsoncpp successful                  *"
echo "*************************************************************"
echo ""